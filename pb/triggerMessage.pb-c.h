/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: triggerMessage.proto */

#ifndef PROTOBUF_C_triggerMessage_2eproto__INCLUDED
#define PROTOBUF_C_triggerMessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _TriggerMessageReq TriggerMessageReq;
typedef struct _TriggerMessageResp TriggerMessageResp;


/* --- enums --- */

typedef enum _TriggerMessageReq__MessageTriggerEnumType {
  TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE__BootNotification = 0,
  TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE__FirmwareStatusNotification = 1,
  TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE__Heartbeat = 2,
  TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE__StatusNotification = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE)
} TriggerMessageReq__MessageTriggerEnumType;
typedef enum _TriggerMessageResp__TriggerMessageStatusEnumType {
  TRIGGER_MESSAGE_RESP__TRIGGER_MESSAGE_STATUS_ENUM_TYPE__Accepted = 0,
  TRIGGER_MESSAGE_RESP__TRIGGER_MESSAGE_STATUS_ENUM_TYPE__Rejected = 1,
  TRIGGER_MESSAGE_RESP__TRIGGER_MESSAGE_STATUS_ENUM_TYPE__NotImplemented = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(TRIGGER_MESSAGE_RESP__TRIGGER_MESSAGE_STATUS_ENUM_TYPE)
} TriggerMessageResp__TriggerMessageStatusEnumType;

/* --- messages --- */

struct  _TriggerMessageReq
{
  ProtobufCMessage base;
  TriggerMessageReq__MessageTriggerEnumType requestedmessage;
};
#define TRIGGER_MESSAGE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&trigger_message_req__descriptor) \
    , TRIGGER_MESSAGE_REQ__MESSAGE_TRIGGER_ENUM_TYPE__BootNotification }


struct  _TriggerMessageResp
{
  ProtobufCMessage base;
  TriggerMessageResp__TriggerMessageStatusEnumType status;
};
#define TRIGGER_MESSAGE_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&trigger_message_resp__descriptor) \
    , TRIGGER_MESSAGE_RESP__TRIGGER_MESSAGE_STATUS_ENUM_TYPE__Accepted }


/* TriggerMessageReq methods */
void   trigger_message_req__init
                     (TriggerMessageReq         *message);
size_t trigger_message_req__get_packed_size
                     (const TriggerMessageReq   *message);
size_t trigger_message_req__pack
                     (const TriggerMessageReq   *message,
                      uint8_t             *out);
size_t trigger_message_req__pack_to_buffer
                     (const TriggerMessageReq   *message,
                      ProtobufCBuffer     *buffer);
TriggerMessageReq *
       trigger_message_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   trigger_message_req__free_unpacked
                     (TriggerMessageReq *message,
                      ProtobufCAllocator *allocator);
/* TriggerMessageResp methods */
void   trigger_message_resp__init
                     (TriggerMessageResp         *message);
size_t trigger_message_resp__get_packed_size
                     (const TriggerMessageResp   *message);
size_t trigger_message_resp__pack
                     (const TriggerMessageResp   *message,
                      uint8_t             *out);
size_t trigger_message_resp__pack_to_buffer
                     (const TriggerMessageResp   *message,
                      ProtobufCBuffer     *buffer);
TriggerMessageResp *
       trigger_message_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   trigger_message_resp__free_unpacked
                     (TriggerMessageResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*TriggerMessageReq_Closure)
                 (const TriggerMessageReq *message,
                  void *closure_data);
typedef void (*TriggerMessageResp_Closure)
                 (const TriggerMessageResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor trigger_message_req__descriptor;
extern const ProtobufCEnumDescriptor    trigger_message_req__message_trigger_enum_type__descriptor;
extern const ProtobufCMessageDescriptor trigger_message_resp__descriptor;
extern const ProtobufCEnumDescriptor    trigger_message_resp__trigger_message_status_enum_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_triggerMessage_2eproto__INCLUDED */
