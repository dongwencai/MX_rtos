/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: startTransaction.proto */

#ifndef PROTOBUF_C_startTransaction_2eproto__INCLUDED
#define PROTOBUF_C_startTransaction_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "IDTokenType.pb-c.h"

typedef struct _StartTransactionReq StartTransactionReq;
typedef struct _StartTransactionReq__ChargingProfileType StartTransactionReq__ChargingProfileType;
typedef struct _StartTransactionResp StartTransactionResp;


/* --- enums --- */

typedef enum _StartTransactionReq__ChargeModeEnumType {
  START_TRANSACTION_REQ__CHARGE_MODE_ENUM_TYPE__ChargeByHour = 0,
  START_TRANSACTION_REQ__CHARGE_MODE_ENUM_TYPE__ChargeByMoney = 1,
  START_TRANSACTION_REQ__CHARGE_MODE_ENUM_TYPE__ChargeByEnergy = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(START_TRANSACTION_REQ__CHARGE_MODE_ENUM_TYPE)
} StartTransactionReq__ChargeModeEnumType;
typedef enum _StartTransactionResp__StartTransactionStatusEnumType {
  START_TRANSACTION_RESP__START_TRANSACTION_STATUS_ENUM_TYPE__Accepted = 0,
  START_TRANSACTION_RESP__START_TRANSACTION_STATUS_ENUM_TYPE__Rejected = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(START_TRANSACTION_RESP__START_TRANSACTION_STATUS_ENUM_TYPE)
} StartTransactionResp__StartTransactionStatusEnumType;
typedef enum _StartTransactionResp__StartTransactionErrorEnumType {
  START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__ConnectorUnavailable = 0,
  START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__ConnectorFault = 2,
  START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__ConnectorInUse = 3,
  START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__EVSEUnavailable = 4,
  START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__EVSEFault = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE)
} StartTransactionResp__StartTransactionErrorEnumType;

/* --- messages --- */

struct  _StartTransactionReq__ChargingProfileType
{
  ProtobufCMessage base;
  StartTransactionReq__ChargeModeEnumType chargemode;
  uint32_t value;
  protobuf_c_boolean has_powerlimit;
  uint32_t powerlimit;
};
#define START_TRANSACTION_REQ__CHARGING_PROFILE_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_transaction_req__charging_profile_type__descriptor) \
    , START_TRANSACTION_REQ__CHARGE_MODE_ENUM_TYPE__ChargeByHour, 0, 0, 0 }


struct  _StartTransactionReq
{
  ProtobufCMessage base;
  uint32_t connectorid;
  IDTokenType *idtoken;
  StartTransactionReq__ChargingProfileType *chargingprofile;
};
#define START_TRANSACTION_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_transaction_req__descriptor) \
    , 0, NULL, NULL }


struct  _StartTransactionResp
{
  ProtobufCMessage base;
  StartTransactionResp__StartTransactionStatusEnumType status;
  protobuf_c_boolean has_errorcode;
  StartTransactionResp__StartTransactionErrorEnumType errorcode;
};
#define START_TRANSACTION_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&start_transaction_resp__descriptor) \
    , START_TRANSACTION_RESP__START_TRANSACTION_STATUS_ENUM_TYPE__Accepted, 0, START_TRANSACTION_RESP__START_TRANSACTION_ERROR_ENUM_TYPE__ConnectorUnavailable }


/* StartTransactionReq__ChargingProfileType methods */
void   start_transaction_req__charging_profile_type__init
                     (StartTransactionReq__ChargingProfileType         *message);
/* StartTransactionReq methods */
void   start_transaction_req__init
                     (StartTransactionReq         *message);
size_t start_transaction_req__get_packed_size
                     (const StartTransactionReq   *message);
size_t start_transaction_req__pack
                     (const StartTransactionReq   *message,
                      uint8_t             *out);
size_t start_transaction_req__pack_to_buffer
                     (const StartTransactionReq   *message,
                      ProtobufCBuffer     *buffer);
StartTransactionReq *
       start_transaction_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_transaction_req__free_unpacked
                     (StartTransactionReq *message,
                      ProtobufCAllocator *allocator);
/* StartTransactionResp methods */
void   start_transaction_resp__init
                     (StartTransactionResp         *message);
size_t start_transaction_resp__get_packed_size
                     (const StartTransactionResp   *message);
size_t start_transaction_resp__pack
                     (const StartTransactionResp   *message,
                      uint8_t             *out);
size_t start_transaction_resp__pack_to_buffer
                     (const StartTransactionResp   *message,
                      ProtobufCBuffer     *buffer);
StartTransactionResp *
       start_transaction_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   start_transaction_resp__free_unpacked
                     (StartTransactionResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*StartTransactionReq__ChargingProfileType_Closure)
                 (const StartTransactionReq__ChargingProfileType *message,
                  void *closure_data);
typedef void (*StartTransactionReq_Closure)
                 (const StartTransactionReq *message,
                  void *closure_data);
typedef void (*StartTransactionResp_Closure)
                 (const StartTransactionResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor start_transaction_req__descriptor;
extern const ProtobufCMessageDescriptor start_transaction_req__charging_profile_type__descriptor;
extern const ProtobufCEnumDescriptor    start_transaction_req__charge_mode_enum_type__descriptor;
extern const ProtobufCMessageDescriptor start_transaction_resp__descriptor;
extern const ProtobufCEnumDescriptor    start_transaction_resp__start_transaction_status_enum_type__descriptor;
extern const ProtobufCEnumDescriptor    start_transaction_resp__start_transaction_error_enum_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_startTransaction_2eproto__INCLUDED */
