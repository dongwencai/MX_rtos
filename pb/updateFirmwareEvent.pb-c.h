/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: updateFirmwareEvent.proto */

#ifndef PROTOBUF_C_updateFirmwareEvent_2eproto__INCLUDED
#define PROTOBUF_C_updateFirmwareEvent_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _UpdateFirmwareEventReq UpdateFirmwareEventReq;
typedef struct _UpdateFirmwareEventReq__UpdateByFTPData UpdateFirmwareEventReq__UpdateByFTPData;
typedef struct _UpdateFirmwareEventReq__UpdateParamType UpdateFirmwareEventReq__UpdateParamType;
typedef struct _UpdateFirmwareEventResp UpdateFirmwareEventResp;


/* --- enums --- */

typedef enum _UpdateFirmwareEventReq__UpdateEventTypeEnumType {
  UPDATE_FIRMWARE_EVENT_REQ__UPDATE_EVENT_TYPE_ENUM_TYPE__Started = 0,
  UPDATE_FIRMWARE_EVENT_REQ__UPDATE_EVENT_TYPE_ENUM_TYPE__Canceled = 1,
  UPDATE_FIRMWARE_EVENT_REQ__UPDATE_EVENT_TYPE_ENUM_TYPE__Paused = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(UPDATE_FIRMWARE_EVENT_REQ__UPDATE_EVENT_TYPE_ENUM_TYPE)
} UpdateFirmwareEventReq__UpdateEventTypeEnumType;
typedef enum _UpdateFirmwareEventReq__UpdateMethodEnumType {
  UPDATE_FIRMWARE_EVENT_REQ__UPDATE_METHOD_ENUM_TYPE__UpdateByCSMS = 0,
  UPDATE_FIRMWARE_EVENT_REQ__UPDATE_METHOD_ENUM_TYPE__UpdateByFTP = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(UPDATE_FIRMWARE_EVENT_REQ__UPDATE_METHOD_ENUM_TYPE)
} UpdateFirmwareEventReq__UpdateMethodEnumType;
typedef enum _UpdateFirmwareEventResp__UpdateFirmwareStatusEnumType {
  UPDATE_FIRMWARE_EVENT_RESP__UPDATE_FIRMWARE_STATUS_ENUM_TYPE__Accepted = 0,
  UPDATE_FIRMWARE_EVENT_RESP__UPDATE_FIRMWARE_STATUS_ENUM_TYPE__Rejected = 1,
  UPDATE_FIRMWARE_EVENT_RESP__UPDATE_FIRMWARE_STATUS_ENUM_TYPE__AcceptedCanceled = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(UPDATE_FIRMWARE_EVENT_RESP__UPDATE_FIRMWARE_STATUS_ENUM_TYPE)
} UpdateFirmwareEventResp__UpdateFirmwareStatusEnumType;

/* --- messages --- */

struct  _UpdateFirmwareEventReq__UpdateByFTPData
{
  ProtobufCMessage base;
  char *location;
  protobuf_c_boolean has_retries;
  int32_t retries;
};
#define UPDATE_FIRMWARE_EVENT_REQ__UPDATE_BY_FTPDATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_firmware_event_req__update_by_ftpdata__descriptor) \
    , NULL, 0, 3 }


struct  _UpdateFirmwareEventReq__UpdateParamType
{
  ProtobufCMessage base;
  UpdateFirmwareEventReq__UpdateMethodEnumType updatemethod;
  char *location;
  protobuf_c_boolean has_retries;
  int32_t retries;
  protobuf_c_boolean has_maxpackagesize;
  int32_t maxpackagesize;
};
#define UPDATE_FIRMWARE_EVENT_REQ__UPDATE_PARAM_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_firmware_event_req__update_param_type__descriptor) \
    , UPDATE_FIRMWARE_EVENT_REQ__UPDATE_METHOD_ENUM_TYPE__UpdateByCSMS, NULL, 0, 0, 0, 0 }


struct  _UpdateFirmwareEventReq
{
  ProtobufCMessage base;
  UpdateFirmwareEventReq__UpdateEventTypeEnumType eventtype;
  UpdateFirmwareEventReq__UpdateParamType *updateparam;
};
#define UPDATE_FIRMWARE_EVENT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_firmware_event_req__descriptor) \
    , UPDATE_FIRMWARE_EVENT_REQ__UPDATE_EVENT_TYPE_ENUM_TYPE__Started, NULL }


struct  _UpdateFirmwareEventResp
{
  ProtobufCMessage base;
  UpdateFirmwareEventResp__UpdateFirmwareStatusEnumType status;
};
#define UPDATE_FIRMWARE_EVENT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&update_firmware_event_resp__descriptor) \
    , UPDATE_FIRMWARE_EVENT_RESP__UPDATE_FIRMWARE_STATUS_ENUM_TYPE__Accepted }


/* UpdateFirmwareEventReq__UpdateByFTPData methods */
void   update_firmware_event_req__update_by_ftpdata__init
                     (UpdateFirmwareEventReq__UpdateByFTPData         *message);
/* UpdateFirmwareEventReq__UpdateParamType methods */
void   update_firmware_event_req__update_param_type__init
                     (UpdateFirmwareEventReq__UpdateParamType         *message);
/* UpdateFirmwareEventReq methods */
void   update_firmware_event_req__init
                     (UpdateFirmwareEventReq         *message);
size_t update_firmware_event_req__get_packed_size
                     (const UpdateFirmwareEventReq   *message);
size_t update_firmware_event_req__pack
                     (const UpdateFirmwareEventReq   *message,
                      uint8_t             *out);
size_t update_firmware_event_req__pack_to_buffer
                     (const UpdateFirmwareEventReq   *message,
                      ProtobufCBuffer     *buffer);
UpdateFirmwareEventReq *
       update_firmware_event_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_firmware_event_req__free_unpacked
                     (UpdateFirmwareEventReq *message,
                      ProtobufCAllocator *allocator);
/* UpdateFirmwareEventResp methods */
void   update_firmware_event_resp__init
                     (UpdateFirmwareEventResp         *message);
size_t update_firmware_event_resp__get_packed_size
                     (const UpdateFirmwareEventResp   *message);
size_t update_firmware_event_resp__pack
                     (const UpdateFirmwareEventResp   *message,
                      uint8_t             *out);
size_t update_firmware_event_resp__pack_to_buffer
                     (const UpdateFirmwareEventResp   *message,
                      ProtobufCBuffer     *buffer);
UpdateFirmwareEventResp *
       update_firmware_event_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   update_firmware_event_resp__free_unpacked
                     (UpdateFirmwareEventResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*UpdateFirmwareEventReq__UpdateByFTPData_Closure)
                 (const UpdateFirmwareEventReq__UpdateByFTPData *message,
                  void *closure_data);
typedef void (*UpdateFirmwareEventReq__UpdateParamType_Closure)
                 (const UpdateFirmwareEventReq__UpdateParamType *message,
                  void *closure_data);
typedef void (*UpdateFirmwareEventReq_Closure)
                 (const UpdateFirmwareEventReq *message,
                  void *closure_data);
typedef void (*UpdateFirmwareEventResp_Closure)
                 (const UpdateFirmwareEventResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor update_firmware_event_req__descriptor;
extern const ProtobufCMessageDescriptor update_firmware_event_req__update_by_ftpdata__descriptor;
extern const ProtobufCMessageDescriptor update_firmware_event_req__update_param_type__descriptor;
extern const ProtobufCEnumDescriptor    update_firmware_event_req__update_event_type_enum_type__descriptor;
extern const ProtobufCEnumDescriptor    update_firmware_event_req__update_method_enum_type__descriptor;
extern const ProtobufCMessageDescriptor update_firmware_event_resp__descriptor;
extern const ProtobufCEnumDescriptor    update_firmware_event_resp__update_firmware_status_enum_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_updateFirmwareEvent_2eproto__INCLUDED */
