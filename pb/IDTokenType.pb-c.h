/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: IDTokenType.proto */

#ifndef PROTOBUF_C_IDTokenType_2eproto__INCLUDED
#define PROTOBUF_C_IDTokenType_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _IDTokenType IDTokenType;


/* --- enums --- */

typedef enum _IDTokenType__IDTokenEnumType {
  /*
   *uuid generated by server
   */
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__Central = 0,
  /*
   *electro-mobility account id
   */
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__eMAID = 1,
  /*
   *RFID card
   */
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__ISO14443 = 2,
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__Local = 3,
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__PinCode = 4,
  /*
   *ISO 15693 uid of RFID card
   */
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__ISO15693 = 5,
  IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__NoAuthorization = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE)
} IDTokenType__IDTokenEnumType;

/* --- messages --- */

struct  _IDTokenType
{
  ProtobufCMessage base;
  ProtobufCBinaryData idtoken;
  IDTokenType__IDTokenEnumType type;
};
#define IDTOKEN_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&idtoken_type__descriptor) \
    , {0,NULL}, IDTOKEN_TYPE__IDTOKEN_ENUM_TYPE__Central }


/* IDTokenType methods */
void   idtoken_type__init
                     (IDTokenType         *message);
size_t idtoken_type__get_packed_size
                     (const IDTokenType   *message);
size_t idtoken_type__pack
                     (const IDTokenType   *message,
                      uint8_t             *out);
size_t idtoken_type__pack_to_buffer
                     (const IDTokenType   *message,
                      ProtobufCBuffer     *buffer);
IDTokenType *
       idtoken_type__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   idtoken_type__free_unpacked
                     (IDTokenType *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*IDTokenType_Closure)
                 (const IDTokenType *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor idtoken_type__descriptor;
extern const ProtobufCEnumDescriptor    idtoken_type__idtoken_enum_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_IDTokenType_2eproto__INCLUDED */
