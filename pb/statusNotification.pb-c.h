/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: statusNotification.proto */

#ifndef PROTOBUF_C_statusNotification_2eproto__INCLUDED
#define PROTOBUF_C_statusNotification_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _StatusNotificationReq StatusNotificationReq;
typedef struct _StatusNotificationReq__ConnectorsStatusType StatusNotificationReq__ConnectorsStatusType;
typedef struct _StatusNotificationResp StatusNotificationResp;


/* --- enums --- */

typedef enum _StatusNotificationReq__ConnectorStatusEnumType {
  STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Available = 0,
  STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Occupied = 1,
  STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Reserved = 2,
  STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Unavailable = 3,
  STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Faulted = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE)
} StatusNotificationReq__ConnectorStatusEnumType;

/* --- messages --- */

struct  _StatusNotificationReq__ConnectorsStatusType
{
  ProtobufCMessage base;
  uint32_t connectorid;
  StatusNotificationReq__ConnectorStatusEnumType connectorstatus;
  protobuf_c_boolean has_faultcode;
  int32_t faultcode;
};
#define STATUS_NOTIFICATION_REQ__CONNECTORS_STATUS_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&status_notification_req__connectors_status_type__descriptor) \
    , 0, STATUS_NOTIFICATION_REQ__CONNECTOR_STATUS_ENUM_TYPE__Available, 0, 0 }


struct  _StatusNotificationReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData timestamp;
  size_t n_connectorsstatus;
  StatusNotificationReq__ConnectorsStatusType **connectorsstatus;
};
#define STATUS_NOTIFICATION_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&status_notification_req__descriptor) \
    , {0,NULL}, 0,NULL }


struct  _StatusNotificationResp
{
  ProtobufCMessage base;
};
#define STATUS_NOTIFICATION_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&status_notification_resp__descriptor) \
     }


/* StatusNotificationReq__ConnectorsStatusType methods */
void   status_notification_req__connectors_status_type__init
                     (StatusNotificationReq__ConnectorsStatusType         *message);
/* StatusNotificationReq methods */
void   status_notification_req__init
                     (StatusNotificationReq         *message);
size_t status_notification_req__get_packed_size
                     (const StatusNotificationReq   *message);
size_t status_notification_req__pack
                     (const StatusNotificationReq   *message,
                      uint8_t             *out);
size_t status_notification_req__pack_to_buffer
                     (const StatusNotificationReq   *message,
                      ProtobufCBuffer     *buffer);
StatusNotificationReq *
       status_notification_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   status_notification_req__free_unpacked
                     (StatusNotificationReq *message,
                      ProtobufCAllocator *allocator);
/* StatusNotificationResp methods */
void   status_notification_resp__init
                     (StatusNotificationResp         *message);
size_t status_notification_resp__get_packed_size
                     (const StatusNotificationResp   *message);
size_t status_notification_resp__pack
                     (const StatusNotificationResp   *message,
                      uint8_t             *out);
size_t status_notification_resp__pack_to_buffer
                     (const StatusNotificationResp   *message,
                      ProtobufCBuffer     *buffer);
StatusNotificationResp *
       status_notification_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   status_notification_resp__free_unpacked
                     (StatusNotificationResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*StatusNotificationReq__ConnectorsStatusType_Closure)
                 (const StatusNotificationReq__ConnectorsStatusType *message,
                  void *closure_data);
typedef void (*StatusNotificationReq_Closure)
                 (const StatusNotificationReq *message,
                  void *closure_data);
typedef void (*StatusNotificationResp_Closure)
                 (const StatusNotificationResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor status_notification_req__descriptor;
extern const ProtobufCMessageDescriptor status_notification_req__connectors_status_type__descriptor;
extern const ProtobufCEnumDescriptor    status_notification_req__connector_status_enum_type__descriptor;
extern const ProtobufCMessageDescriptor status_notification_resp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_statusNotification_2eproto__INCLUDED */
