/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: bootNotification.proto */

#ifndef PROTOBUF_C_bootNotification_2eproto__INCLUDED
#define PROTOBUF_C_bootNotification_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BootNotificationReq BootNotificationReq;
typedef struct _BootNotificationReq__ModemType BootNotificationReq__ModemType;
typedef struct _BootNotificationResp BootNotificationResp;


/* --- enums --- */

typedef enum _BootNotificationReq__BootReasonEnumType {
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__ApplicationReset = 0,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__FirmWareUpdate = 1,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__LocalReset = 2,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__PowerUp = 3,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__RemoteReset = 4,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__Watchdog = 5,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__CommunicationTimeout = 6,
  BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__Unknown = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE)
} BootNotificationReq__BootReasonEnumType;
typedef enum _BootNotificationResp__RegistrationStatusEnumType {
  BOOT_NOTIFICATION_RESP__REGISTRATION_STATUS_ENUM_TYPE__Accepted = 0,
  BOOT_NOTIFICATION_RESP__REGISTRATION_STATUS_ENUM_TYPE__Pending = 1,
  BOOT_NOTIFICATION_RESP__REGISTRATION_STATUS_ENUM_TYPE__Rejected = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BOOT_NOTIFICATION_RESP__REGISTRATION_STATUS_ENUM_TYPE)
} BootNotificationResp__RegistrationStatusEnumType;

/* --- messages --- */

struct  _BootNotificationReq__ModemType
{
  ProtobufCMessage base;
  char *iccid;
  char *imsi;
};
#define BOOT_NOTIFICATION_REQ__MODEM_TYPE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&boot_notification_req__modem_type__descriptor) \
    , NULL, NULL }


struct  _BootNotificationReq
{
  ProtobufCMessage base;
  BootNotificationReq__BootReasonEnumType reason;
  char *serialnumber;
  char *key;
  char *mode;
  char *vendorname;
  char *firmwareversion;
  uint32_t pcbid;
  BootNotificationReq__ModemType *modem;
};
#define BOOT_NOTIFICATION_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&boot_notification_req__descriptor) \
    , BOOT_NOTIFICATION_REQ__BOOT_REASON_ENUM_TYPE__ApplicationReset, NULL, NULL, NULL, NULL, NULL, 0, NULL }


struct  _BootNotificationResp
{
  ProtobufCMessage base;
  BootNotificationResp__RegistrationStatusEnumType status;
  ProtobufCBinaryData currenttime;
  int32_t interval;
};
#define BOOT_NOTIFICATION_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&boot_notification_resp__descriptor) \
    , BOOT_NOTIFICATION_RESP__REGISTRATION_STATUS_ENUM_TYPE__Accepted, {0,NULL}, 0 }


/* BootNotificationReq__ModemType methods */
void   boot_notification_req__modem_type__init
                     (BootNotificationReq__ModemType         *message);
/* BootNotificationReq methods */
void   boot_notification_req__init
                     (BootNotificationReq         *message);
size_t boot_notification_req__get_packed_size
                     (const BootNotificationReq   *message);
size_t boot_notification_req__pack
                     (const BootNotificationReq   *message,
                      uint8_t             *out);
size_t boot_notification_req__pack_to_buffer
                     (const BootNotificationReq   *message,
                      ProtobufCBuffer     *buffer);
BootNotificationReq *
       boot_notification_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   boot_notification_req__free_unpacked
                     (BootNotificationReq *message,
                      ProtobufCAllocator *allocator);
/* BootNotificationResp methods */
void   boot_notification_resp__init
                     (BootNotificationResp         *message);
size_t boot_notification_resp__get_packed_size
                     (const BootNotificationResp   *message);
size_t boot_notification_resp__pack
                     (const BootNotificationResp   *message,
                      uint8_t             *out);
size_t boot_notification_resp__pack_to_buffer
                     (const BootNotificationResp   *message,
                      ProtobufCBuffer     *buffer);
BootNotificationResp *
       boot_notification_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   boot_notification_resp__free_unpacked
                     (BootNotificationResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BootNotificationReq__ModemType_Closure)
                 (const BootNotificationReq__ModemType *message,
                  void *closure_data);
typedef void (*BootNotificationReq_Closure)
                 (const BootNotificationReq *message,
                  void *closure_data);
typedef void (*BootNotificationResp_Closure)
                 (const BootNotificationResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor boot_notification_req__descriptor;
extern const ProtobufCMessageDescriptor boot_notification_req__modem_type__descriptor;
extern const ProtobufCEnumDescriptor    boot_notification_req__boot_reason_enum_type__descriptor;
extern const ProtobufCMessageDescriptor boot_notification_resp__descriptor;
extern const ProtobufCEnumDescriptor    boot_notification_resp__registration_status_enum_type__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_bootNotification_2eproto__INCLUDED */
